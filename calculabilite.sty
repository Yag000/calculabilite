\usepackage{base-yago/base-yago}



%% Turing Machines

\newcommand{\encode}[1]{\left\langle#1\right\rangle}

%% Basic automata theory

%%%% Basic definitions

\newcommand{\alphabet}{\Sigma}

\newcommand{\mot}{w}

\newcommand{\decomp}[2] {
	#1_1 #1_2 \ldots #1_{#2}
}

\newcommand{\motDecomp}[2] {
	#1 = \decomp{#1}{#2}
}

\newcommand{\motvide}{\varepsilon}
\newcommand{\len}[1]{|#1|}


\newcommand{\kleenestar}{*}
\newcommand{\kleene}[1]{#1^{\kleenestar}}
\newcommand{\mots}{\kleene{\alphabet}}

%%%% Languages

\newcommand{\lang}[1]{\mathcal{L}\left(#1\right)}
\newcommand{\langstar}{\kleene{\lang}}


\newcommand{\leqm}{\leq_m}
\newcommand{\equivm}{\equiv_m}

\newcommand{\fmots}[1]{#1 : \mots \to \mots}

\newcommand{\halt}{\text{ HALT }}

\newcommand{\universal}[2]{\mathcal U \left(#1,#2\right)}

%%%% Regex

\newcommand{\eratsym}{ERat}
\newcommand{\erat}{\text{\eratsym}}

%% ocaml

\newcommand{\letin}[2]{\text{\violet{let} } #1 = #2 \text{ \violet{in} }}


%% General stuff

\newcommand{\reason}[1]{\quad\left(\textit{#1}\right)}

\newcommand*\circled[1]{\tikz[baseline=(char.base)]{
		\node[shape=circle,draw,inner sep=2pt] (char) {#1};}}
